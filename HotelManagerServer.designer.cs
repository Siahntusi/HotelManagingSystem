#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WFC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Managementofhotels")]
	public partial class HotelManagerServerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHOTEL_OWNER(HOTEL_OWNER instance);
    partial void UpdateHOTEL_OWNER(HOTEL_OWNER instance);
    partial void DeleteHOTEL_OWNER(HOTEL_OWNER instance);
    partial void InsertHOTEL_MANAGER(HOTEL_MANAGER instance);
    partial void UpdateHOTEL_MANAGER(HOTEL_MANAGER instance);
    partial void DeleteHOTEL_MANAGER(HOTEL_MANAGER instance);
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    #endregion
		
		public HotelManagerServerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ManagementofhotelsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerServerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerServerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerServerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelManagerServerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HOTEL_OWNER> HOTEL_OWNERs
		{
			get
			{
				return this.GetTable<HOTEL_OWNER>();
			}
		}
		
		public System.Data.Linq.Table<HOTEL_MANAGER> HOTEL_MANAGERs
		{
			get
			{
				return this.GetTable<HOTEL_MANAGER>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENTs
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOTEL_OWNER")]
	public partial class HOTEL_OWNER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OWNER_ID;
		
		private string _FULL_NAMES;
		
		private string _SURNAME;
		
		private string _TITLE;
		
		private string _GENDER;
		
		private string _EMAIL;
		
		private string _NUMBER;
		
		private string _PASSWORD;
		
		private string _AUTHENTICATION_LEVEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOWNER_IDChanging(int value);
    partial void OnOWNER_IDChanged();
    partial void OnFULL_NAMESChanging(string value);
    partial void OnFULL_NAMESChanged();
    partial void OnSURNAMEChanging(string value);
    partial void OnSURNAMEChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnNUMBERChanging(string value);
    partial void OnNUMBERChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnAUTHENTICATION_LEVELChanging(string value);
    partial void OnAUTHENTICATION_LEVELChanged();
    #endregion
		
		public HOTEL_OWNER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OWNER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OWNER_ID
		{
			get
			{
				return this._OWNER_ID;
			}
			set
			{
				if ((this._OWNER_ID != value))
				{
					this.OnOWNER_IDChanging(value);
					this.SendPropertyChanging();
					this._OWNER_ID = value;
					this.SendPropertyChanged("OWNER_ID");
					this.OnOWNER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULL_NAMES", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FULL_NAMES
		{
			get
			{
				return this._FULL_NAMES;
			}
			set
			{
				if ((this._FULL_NAMES != value))
				{
					this.OnFULL_NAMESChanging(value);
					this.SendPropertyChanging();
					this._FULL_NAMES = value;
					this.SendPropertyChanged("FULL_NAMES");
					this.OnFULL_NAMESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SURNAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SURNAME
		{
			get
			{
				return this._SURNAME;
			}
			set
			{
				if ((this._SURNAME != value))
				{
					this.OnSURNAMEChanging(value);
					this.SendPropertyChanging();
					this._SURNAME = value;
					this.SendPropertyChanged("SURNAME");
					this.OnSURNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this.OnNUMBERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER = value;
					this.SendPropertyChanged("NUMBER");
					this.OnNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTHENTICATION_LEVEL", DbType="VarChar(5)")]
		public string AUTHENTICATION_LEVEL
		{
			get
			{
				return this._AUTHENTICATION_LEVEL;
			}
			set
			{
				if ((this._AUTHENTICATION_LEVEL != value))
				{
					this.OnAUTHENTICATION_LEVELChanging(value);
					this.SendPropertyChanging();
					this._AUTHENTICATION_LEVEL = value;
					this.SendPropertyChanged("AUTHENTICATION_LEVEL");
					this.OnAUTHENTICATION_LEVELChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOTEL_MANAGER")]
	public partial class HOTEL_MANAGER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANAGER_ID;
		
		private string _FULL_NAMES;
		
		private string _SURNAME;
		
		private string _TITLE;
		
		private string _GENDER;
		
		private string _EMPLOYEE_NUMBER;
		
		private string _EMAIL;
		
		private string _NUMBER;
		
		private string _PASSWORD;
		
		private string _AUTHENTICATION_LEVEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANAGER_IDChanging(int value);
    partial void OnMANAGER_IDChanged();
    partial void OnFULL_NAMESChanging(string value);
    partial void OnFULL_NAMESChanged();
    partial void OnSURNAMEChanging(string value);
    partial void OnSURNAMEChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnEMPLOYEE_NUMBERChanging(string value);
    partial void OnEMPLOYEE_NUMBERChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnNUMBERChanging(string value);
    partial void OnNUMBERChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnAUTHENTICATION_LEVELChanging(string value);
    partial void OnAUTHENTICATION_LEVELChanged();
    #endregion
		
		public HOTEL_MANAGER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANAGER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANAGER_ID
		{
			get
			{
				return this._MANAGER_ID;
			}
			set
			{
				if ((this._MANAGER_ID != value))
				{
					this.OnMANAGER_IDChanging(value);
					this.SendPropertyChanging();
					this._MANAGER_ID = value;
					this.SendPropertyChanged("MANAGER_ID");
					this.OnMANAGER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULL_NAMES", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FULL_NAMES
		{
			get
			{
				return this._FULL_NAMES;
			}
			set
			{
				if ((this._FULL_NAMES != value))
				{
					this.OnFULL_NAMESChanging(value);
					this.SendPropertyChanging();
					this._FULL_NAMES = value;
					this.SendPropertyChanged("FULL_NAMES");
					this.OnFULL_NAMESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SURNAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SURNAME
		{
			get
			{
				return this._SURNAME;
			}
			set
			{
				if ((this._SURNAME != value))
				{
					this.OnSURNAMEChanging(value);
					this.SendPropertyChanging();
					this._SURNAME = value;
					this.SendPropertyChanged("SURNAME");
					this.OnSURNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMPLOYEE_NUMBER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EMPLOYEE_NUMBER
		{
			get
			{
				return this._EMPLOYEE_NUMBER;
			}
			set
			{
				if ((this._EMPLOYEE_NUMBER != value))
				{
					this.OnEMPLOYEE_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._EMPLOYEE_NUMBER = value;
					this.SendPropertyChanged("EMPLOYEE_NUMBER");
					this.OnEMPLOYEE_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this.OnNUMBERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER = value;
					this.SendPropertyChanged("NUMBER");
					this.OnNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTHENTICATION_LEVEL", DbType="VarChar(5)")]
		public string AUTHENTICATION_LEVEL
		{
			get
			{
				return this._AUTHENTICATION_LEVEL;
			}
			set
			{
				if ((this._AUTHENTICATION_LEVEL != value))
				{
					this.OnAUTHENTICATION_LEVELChanging(value);
					this.SendPropertyChanging();
					this._AUTHENTICATION_LEVEL = value;
					this.SendPropertyChanged("AUTHENTICATION_LEVEL");
					this.OnAUTHENTICATION_LEVELChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENT")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CLIENT_ID;
		
		private string _FULL_NAMES;
		
		private string _SURNAME;
		
		private string _TITLE;
		
		private string _GENDER;
		
		private string _EMAIL;
		
		private string _NUMBER;
		
		private string _PAYMENT_TYPE;
		
		private string _PASSWORD;
		
		private string _AUTHENTICATION_LEVEL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLIENT_IDChanging(int value);
    partial void OnCLIENT_IDChanged();
    partial void OnFULL_NAMESChanging(string value);
    partial void OnFULL_NAMESChanged();
    partial void OnSURNAMEChanging(string value);
    partial void OnSURNAMEChanged();
    partial void OnTITLEChanging(string value);
    partial void OnTITLEChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnNUMBERChanging(string value);
    partial void OnNUMBERChanged();
    partial void OnPAYMENT_TYPEChanging(string value);
    partial void OnPAYMENT_TYPEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnAUTHENTICATION_LEVELChanging(string value);
    partial void OnAUTHENTICATION_LEVELChanged();
    #endregion
		
		public CLIENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CLIENT_ID
		{
			get
			{
				return this._CLIENT_ID;
			}
			set
			{
				if ((this._CLIENT_ID != value))
				{
					this.OnCLIENT_IDChanging(value);
					this.SendPropertyChanging();
					this._CLIENT_ID = value;
					this.SendPropertyChanged("CLIENT_ID");
					this.OnCLIENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULL_NAMES", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FULL_NAMES
		{
			get
			{
				return this._FULL_NAMES;
			}
			set
			{
				if ((this._FULL_NAMES != value))
				{
					this.OnFULL_NAMESChanging(value);
					this.SendPropertyChanging();
					this._FULL_NAMES = value;
					this.SendPropertyChanged("FULL_NAMES");
					this.OnFULL_NAMESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SURNAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SURNAME
		{
			get
			{
				return this._SURNAME;
			}
			set
			{
				if ((this._SURNAME != value))
				{
					this.OnSURNAMEChanging(value);
					this.SendPropertyChanging();
					this._SURNAME = value;
					this.SendPropertyChanged("SURNAME");
					this.OnSURNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITLE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TITLE
		{
			get
			{
				return this._TITLE;
			}
			set
			{
				if ((this._TITLE != value))
				{
					this.OnTITLEChanging(value);
					this.SendPropertyChanging();
					this._TITLE = value;
					this.SendPropertyChanged("TITLE");
					this.OnTITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this.OnNUMBERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER = value;
					this.SendPropertyChanged("NUMBER");
					this.OnNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMENT_TYPE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PAYMENT_TYPE
		{
			get
			{
				return this._PAYMENT_TYPE;
			}
			set
			{
				if ((this._PAYMENT_TYPE != value))
				{
					this.OnPAYMENT_TYPEChanging(value);
					this.SendPropertyChanging();
					this._PAYMENT_TYPE = value;
					this.SendPropertyChanged("PAYMENT_TYPE");
					this.OnPAYMENT_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTHENTICATION_LEVEL", DbType="VarChar(5)")]
		public string AUTHENTICATION_LEVEL
		{
			get
			{
				return this._AUTHENTICATION_LEVEL;
			}
			set
			{
				if ((this._AUTHENTICATION_LEVEL != value))
				{
					this.OnAUTHENTICATION_LEVELChanging(value);
					this.SendPropertyChanging();
					this._AUTHENTICATION_LEVEL = value;
					this.SendPropertyChanged("AUTHENTICATION_LEVEL");
					this.OnAUTHENTICATION_LEVELChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
